# This is an example script for Tenable integration.
# It is not a real script and is for demonstration purposes only.

import requests
import json

def get_password_from_cyberark(ccp_url, app_id, safe, object_name):
    """
    Fetches a password from the CyberArk Central Credential Provider (CCP).
    This example does not handle certificate authentication for simplicity.
    """
    query_params = f"AppID={app_id}&Safe={safe}&Object={object_name}"
    full_url = f"{ccp_url}?{query_params}"
    
    print(f"Requesting password from: {full_url}")
    
    try:
        # In a real-world scenario, SSL verification should be properly configured.
        # For example: response = requests.get(full_url, verify='/path/to/ca.crt')
        response = requests.get(full_url, verify=False) 
        
        # Raise an exception for bad status codes (4xx or 5xx)
        response.raise_for_status()
        
        password_data = response.json()
        return password_data.get("Content")

    except requests.exceptions.RequestException as e:
        print(f"Error fetching password from CyberArk: {e}")
        return None

if __name__ == "__main__":
    # --- Configuration ---
    CCP_WEB_SERVICE_URL = "https://<ccp-server-hostname>/AIMWebService/api/Accounts"
    APPLICATION_ID = "App-TenableScanner-Cert"
    TARGET_SAFE = "Your-Target-Safe-Name"
    TARGET_ACCOUNT_OBJECT = "Your-Target-Account-Object"
    
    password = get_password_from_cyberark(
        CCP_WEB_SERVICE_URL,
        APPLICATION_ID,
        TARGET_SAFE,
        TARGET_ACCOUNT_OBJECT
    )
    
    if password:
        print("Successfully retrieved password from CyberArk.")
        # In a real script, you would now use this password for authentication.
        # print(f"Retrieved Password: {password}") # Be careful not to print secrets in production logs.
    else:
        print("Failed to retrieve password. Please check the configuration and logs.")
